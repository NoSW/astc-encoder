name: weekly
run-name: Build, test and release

on:
  schedule:
    - cron: '17 2 * * 1'

jobs:
  # coverity:
  #   ToDo: Run Coverity static analysis

  build-ubuntu:
    name: Build and test on Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Build R
        run: |
          export CXX=clang++-9
          mkdir build_rel
          cd build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../ -DASTCENC_ISA_AVX2=ON -DASTCENC_ISA_SSE41=ON -DASTCENC_ISA_SSE2=ON -DASTCENC_PACKAGE=x64 ..
          make install package -j4

      - name: Build D
        run: |
          export CXX=clang++-9
          mkdir build_dbg
          cd build_dbg
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../ -DASTCENC_ISA_AVX2=ON -DASTCENC_ISA_SSE41=ON -DASTCENC_ISA_SSE2=ON -DASTCENC_DECOMPRESSOR=ON ..
          make -j4

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: astcenc-linux-x64
          path: |
            build_rel/*.zip
            build_rel/*.zip.sha256

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Get Python modules
        run: |
          python -m pip install --upgrade pip
          pip install numpy Pillow

      - name: Python Tests
        run: |
          python ./Test/astc_test_functional.py
          python ./Test/astc_test_image.py --encoder=all-x86 --test-set Small

  build-macos:
    name: Build and test on MacOS
    runs-on: macos-12
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Build R
        run: |
          mkdir build_rel
          cd build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../ -DASTCENC_PACKAGE=universal ..
          make install package -j4

      # - name: Sign and notarize
      #     ToDo: Sign the binaries

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: astcenc-macos-x64
          path: |
            build_rel/*.zip
            build_rel/*.zip.sha256

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Get Python modules
        run: |
          python -m pip install --upgrade pip
          pip install numpy Pillow

      - name: Python Tests
        run: |
          python ./Test/astc_test_image.py --test-set Small --encoder universal

  build-windows-msvc-ClangCL:
    name: Build and test on Windows MSVC
    runs-on: windows-2022
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Visual Studio
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build R
        run: |
          mkdir build_rel
          cd build_rel
          cmake -G "Visual Studio 17 2022" -T ClangCL -DCMAKE_INSTALL_PREFIX=../ -DASTCENC_ISA_AVX2=ON -DASTCENC_ISA_SSE41=ON -DASTCENC_ISA_SSE2=ON -DASTCENC_PACKAGE=x64 ..
          msbuild astcencoder.sln -property:Configuration=Release
          msbuild PACKAGE.vcxproj -property:Configuration=Release
          msbuild INSTALL.vcxproj -property:Configuration=Release
        shell: cmd

      # - name: Sign binaries
      #     ToDo: Sign the binaries

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: astcenc-windows-x64-cl
          path: build_rel/*.zip

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Get Python modules
        run: |
          python -m pip install --upgrade pip
          pip install numpy Pillow
        shell: cmd

      - name: Python Tests
        run: |
          python ./Test/astc_test_image.py --test-set Small
        shell: cmd

  create-release-package:
    name: Create release package
    runs-on: ubuntu-22.04
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          path: upload

      - name: Create release zip
        run: |
          cd upload
          cat *.sha256 > release-sha256.txt
          rm *.sha256
          zip astcenc.zip *

      - name: Upload to release
        # ToDo: Actually release
        uses: actions/upload-artifact@v3
        with:
          name: astcenc-release
          path: upload/astcenc.zip
